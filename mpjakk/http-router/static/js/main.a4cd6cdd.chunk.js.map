{"version":3,"sources":["Components/CatRow.js","Components/Modal.js","Components/CatTable.js","Components/Nav.js","views/Home.js","views/Profile.js","views/Single.js","utils/MediaAPI.js","App.js","serviceWorker.js","index.js"],"names":["CatRow","Component","props","state","modalOpen","toggleModalComponent","bind","this","setState","className","src","content","thumbnails","w160","alt","title","description","to","pathname","file_id","CatTable","Nav","Home","Fragment","data","map","i","key","Profile","Single","file","filename","mediaUrl","id","location","fetch","url","then","res","json","catch","err","console","log","App","Promise","all","item","response","items","getAllMedia","basename","exact","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a4cd6cdd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Modal from './Modal';\r\n\r\nexport default class CatRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalOpen: false\r\n        }\r\n        this.toggleModalComponent = this.toggleModalComponent.bind(this);\r\n    }\r\n\r\n    toggleModalComponent() {\r\n        this.setState({modalOpen: !this.state.modalOpen});\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CatRow\">\r\n                <td>\r\n                    <img src={this.props.content.thumbnails ?\r\n                         'http://media.mw.metropolia.fi/wbma/uploads/' + this.props.content.thumbnails.w160 : ''} \r\n                         alt={this.props.content.title} />\r\n                </td>\r\n                <td>\r\n                    <h3>{this.props.content.title}</h3>\r\n                    <p>{this.props.content.description}</p>\r\n                </td>\r\n                <td>\r\n                    <Link to={{pathname: '/single', file_id: this.props.content.file_id}}>View</Link>\r\n                </td> \r\n            </div>         \r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class Modal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Modal\">\r\n                <button onClick={this.props.toggleModal}>x</button>\r\n                <img src={'http://media.mw.metropolia.fi/wbma/uploads/' + this.props.content.filename} alt={this.props.content.title}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport CatRow from './CatRow';\r\n\r\nexport default class CatTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CatTable\">\r\n                <CatRow content={this.props.content}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n    \r\n    const Nav = () => {\r\n      return (\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/profile\">Profile</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n      );\r\n    };\r\n    \r\n    export default Nav;","import React from 'react';\r\nimport CatTable from '../Components/CatTable';\r\n    \r\nexport const Home = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>Home</h1>\r\n            {props.data.map(i => <CatTable key={i.file_id} content={i}/>)}\r\n        </React.Fragment>\r\n    );\r\n};","import React from 'react';\r\n    \r\nexport const Profile = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n        <h1>Profile</h1>\r\n        </React.Fragment>\r\n    );\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {getSingleMedia} from '../utils/MediaAPI';\r\n   \r\nexport default class Single extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n        file: {\r\n            filename: 'b39f699f211eaf63c435aa241d2384f2.jpg',\r\n            title: 'Test',\r\n        },\r\n        mediaUrl: 'http://media.mw.metropolia.fi/wbma/uploads/'\r\n        };   \r\n    }\r\n   \r\n    componentDidMount() {\r\n      getSingleMedia(this.props.location.file_id).then(res => this.setState({file: res}));\r\n    }\r\n\r\n    render() {\r\n       return (\r\n           <React.Fragment>\r\n             <h1>{this.state.file.title}</h1>\r\n             <img src={this.state.mediaUrl + this.state.file.filename} alt={this.state.file.title}/>\r\n           </React.Fragment>\r\n       );\r\n     }   \r\n   }\r\n   \r\n   Single.propTypes = {\r\n     match: PropTypes.object,\r\n   };\r\n\r\n","export const getAllMedia = () => {\r\n    const url = 'http://media.mw.metropolia.fi/wbma/media';\r\n    return fetch(url)\r\n    .then(res => res.json())\r\n    .then((res) => {\r\n      //console.log(res);\r\n\r\n      return Promise.all(res.map(item => {\r\n        //console.log(item.file_id);\r\n        return fetch(url + '/' + item.file_id)\r\n          .then(response => response.json())\r\n      }))\r\n      .then(items => {\r\n        console.log(items);\r\n        //this.setState({data: items});\r\n        return items;\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n    \r\n}\r\n\r\nexport const getSingleMedia = (id) => {\r\n  const url = 'http://media.mw.metropolia.fi/wbma/media';\r\n  return fetch(url + '/' + id)\r\n  .then(res => res.json())\r\n  .then(res => res)\r\n  .catch(err => console.log(err))\r\n}","import React, {Component} from 'react';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom'\n\nimport './App.css';\n\nimport CatTable from './Components/CatTable';\nimport Nav from './Components/Nav';\nimport { Home } from './views/Home';\nimport { Profile } from './views/Profile';\nimport Single from './views/Single';\n\nimport axios from 'axios';\nimport {getAllMedia} from './utils/MediaAPI';\n\n\nconst picArray = [\n  {\n    'title': 'Title 1',\n    'description': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sodales enim eget leo condimentum vulputate. Sed lacinia consectetur fermentum. Vestibulum lobortis purus id nisi mattis posuere. Praesent sagittis justo quis nibh ullamcorper, eget elementum lorem consectetur. Pellentesque eu consequat justo, eu sodales eros.',\n    'thumbnails': {\n      w160: 'http://placekitten.com/160/161',\n    },\n    'filename': 'http://placekitten.com/2048/1920',\n  },\n  {\n\n    'title': 'Title 2',\n    'description': 'Donec dignissim tincidunt nisl, non scelerisque massa pharetra ut. Sed vel velit ante. Aenean quis viverra magna. Praesent eget cursus urna. Ut rhoncus interdum dolor non tincidunt. Sed vehicula consequat facilisis. Pellentesque pulvinar sem nisl, ac vestibulum erat rhoncus id. Vestibulum tincidunt sapien eu ipsum tincidunt pulvinar. ',\n    'thumbnails': {\n      w160: 'http://placekitten.com/160/162',\n    },\n    'filename': 'http://placekitten.com/2041/1922',\n  },\n  {\n    'title': 'Title 3',\n    'description': 'Phasellus imperdiet nunc tincidunt molestie vestibulum. Donec dictum suscipit nibh. Sed vel velit ante. Aenean quis viverra magna. Praesent eget cursus urna. Ut rhoncus interdum dolor non tincidunt. Sed vehicula consequat facilisis. Pellentesque pulvinar sem nisl, ac vestibulum erat rhoncus id. ',\n    'thumbnails': {\n      w160: 'http://placekitten.com/160/163',\n    },\n    'filename': 'http://placekitten.com/2039/1920',\n  },\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      url: 'http://media.mw.metropolia.fi/wbma/media'\n    }\n  }\n\n  componentDidMount() {\n    getAllMedia().then(res => this.setState({data: res}));\n  }\n//basename='/~lottalau/mpjakk'\n  render() {\n    return (\n      <Router basename='/~lottalau/mpjakk/http-router'>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Nav/>\n            <Route exact path=\"/\" render={(props) => (\n                    <Home {...props} data={this.state.data}/>\n                )}/>\n            <Route exact path=\"/profile\" render={(props) => (\n                    <Profile {...props} data={this.state.data}/>\n                )}/>\n            <Route exact path=\"/single\" render={(props) => (\n                    <Single {...props} data={this.state.data}/>\n                )}/>\n          </header>\n        </div>\n      </Router>\n    )\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}